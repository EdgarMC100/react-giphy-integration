{"version":3,"sources":["Components/AddCategory/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem/GifGridItem.js","Components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","Components/GifExpertApp/GifExpertApp.js","index.js"],"names":["AddCategory","props","state","text","handleInputChange","bind","handleSubmit","e","console","log","target","value","this","setState","preventDefault","setCategories","cats","onSubmit","type","onChange","React","Component","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","length","slice","GifGrid","useState","loading","useEffect","then","imgs","setTimeout","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2PAyCeA,E,kDArCb,WAAcC,GAAS,IAAD,8BACpB,cAAOA,IACFC,MAAQ,CACXC,KAAO,mBAET,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANA,E,qDAStB,SAAoBE,GAClBC,QAAQC,IAAKF,EAAEG,OAAOC,OACtBC,KAAKC,SAAU,CAAEV,KAAMI,EAAEG,OAAOC,U,0BAGlC,SAAeJ,GAAK,IAAD,OACjBA,EAAEO,iBACFF,KAAKX,MAAMc,eAAe,SAAAC,GAAI,iBAAQ,EAAKd,MAAMC,OAAnB,mBAA8Ba,OAC5DJ,KAAKC,SAAS,CAAEV,KAAO,O,oBAIzB,WACE,OACH,sBAAMc,SAAaL,KAAKN,aAAxB,SACE,uBACEY,KAAO,OACPP,MAAUC,KAAKV,MAAMC,KACrBgB,SAAaP,KAAKR,0B,GA5BGgB,IAAMC,W,gCCYjBC,EAfF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,0FACmFC,UAAUH,GAD7F,sBAGOI,MAAOF,GAHd,cAGNG,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAO,CACZC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATlB,kBAYLM,GAZK,4CAAH,sDCgBEO,EAfK,SAAC,GAAkB,EAAjBJ,GAAkB,IAAfC,EAAc,EAAdA,MAAMV,EAAQ,EAARA,IAC7B,OACE,mCACE,sBAAKc,UAAU,yCAAf,UACL,qBAAKC,IAAOf,IACZ,4BAEEU,EAAMM,OAAS,GAAKN,EAAMO,MAAM,EAAE,IAAMP,UCL9BQ,EAAU,SAAC,GAAoB,IAAjBpB,EAAgB,EAAhBA,SAAgB,ECAf,SAAEA,GAAe,IAAD,EACbqB,mBAAU,CACrCd,KAAM,GACNe,SAAS,IAH+B,mBAClC3C,EADkC,KAC1BW,EAD0B,KAmB3C,OAbCiC,qBAAW,WACPxB,EAASC,GACbwB,MAAM,SAAAC,GACLC,YAAY,WACTzC,QAAQC,IAAIuC,GACZnC,EAAS,CACRiB,KAAMkB,EACNH,SAAS,MAEV,UAED,CAAEtB,IAECrB,EDjBkBgD,CAAa3B,GAA9BsB,EAFkC,EAElCA,QAASf,EAFyB,EAEzBA,KAEjB,OACG,qCACE,6BAAKP,IACHsB,GAAW,mBAAGN,UAAU,mCAAb,qBACb,qBAAKA,UAAU,SAAf,SAEHT,EAAKE,KAAK,SAAAmB,GAAK,OACb,cAAC,EAAD,eAAgCA,GAAdA,EAAMjB,aEMdkB,EAhBM,WAAO,IAAD,EACWR,mBAAS,CAAC,cADrB,mBAClBS,EADkB,KACNtC,EADM,KAEzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEHsC,EAAWrB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAA0BA,SAAUA,GAApBA,UCNrB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.530fe2db.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddCategory extends React.Component {\n  constructor ( props ) {\n    super( props );\n    this.state = {\n      text : 'Enter some text'\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //const { setCategories } = this.props;\n  }\n  handleInputChange ( e ) {\n    console.log( e.target.value );\n    this.setState( { text: e.target.value } )\n  }\n\n  handleSubmit ( e ) {\n    e.preventDefault();\n    this.props.setCategories( cats => [`${this.state.text}`, ...cats ] )\n    this.setState({ text : '' });\n    //console.log(e.target.value);\n\n  }\n  render () {\n    return(\n\t<form onSubmit = { this.handleSubmit }>\n\t  <input \n\t    type = \"text\"\n\t    value = { this.state.text }\n\t    onChange = { this.handleInputChange }     \n\t  />\n\t</form>\n    );\n  }\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\nexport default AddCategory;\n","const getGifs = async (category ) => { \n    const url = `https://api.giphy.com/v1/gifs/search?api_key=eQ8lP4k2nxLlHpHTGzpeTxSksq7ICwz3&q=${encodeURI(category)}&limit=10`;\n\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n    const gifs = data.map( img => {\n      return {\n\tid: img.id,\n\ttitle: img.title,\n\turl: img.images.downsized_medium.url\n      }\n    });\n    return gifs;\n}\n\nexport default getGifs;\n \n","import React from 'react';\nconst GifGridItem = ({id,title,url}) =>{\n  return(\n    <>\n      <div className=\"card animate__animated animate__bounce\">\n\t<img src = {url}/>\n\t<p>\n\t{\n\t  title.length > 20 ? title.slice(0,19) : title\n\t}\n\t</p>\n      </div>\n    </>\n  )\n}\n\nexport default GifGridItem;\n","import React, {useState, useEffect} from 'react'\nimport { useFetchGifs } from '../../hooks/useFetchGifs'\nimport GifGridItem from '../GifGridItem/GifGridItem'\nexport const GifGrid = ( { category } ) => {\n  \n  const {loading, data} = useFetchGifs(category);\n\n return(\n    <>\n      <h1>{category}</h1>\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      <div className=\"cards \">\n\t{\n\t  data.map( image => \n\t    <GifGridItem key={image.id} {...image}/>\n\t  )\n\t}\n      </div>\n    </>\n ) \n}\n","import { useState, useEffect } from 'react'\nimport getGifs from '../Helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n  const [ state , setState ] = useState( {\n    data: [], \n    loading: true \n  } )\n  \n  useEffect( () => {\n      getGifs( category )\n\t.then( imgs => {\n\t  setTimeout( () => {\n\t     console.log(imgs)\n\t     setState({\n\t      data: imgs,\n\t      loading: false\n\t    })\n\t  }, 3000)\n\t})\n  }, [ category ])\n\n return state;\n\n}\n","import React, { useState } from 'react';\nimport AddCategory from '../AddCategory/AddCategory'\nimport { GifGrid } from '../GifGrid/GifGrid';\n//import GifGridC from '../GifGrid/GifGridC';\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['One Punch']);\n  return(\n    <>\n      <h2>GifExpertApp</h2> \n      <AddCategory setCategories = { setCategories } />\n      <hr/>\n\t{\n\t  categories.map( category => \n\t    <GifGrid key = {category} category={category}/>\n\t  )\n\t}\n    </>\n  )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './Components/GifExpertApp/GifExpertApp.js';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}